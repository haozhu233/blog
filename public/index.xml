<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hao Zhu</title>
    <link>https://zhuhao.org/</link>
    <description>Recent content on Hao Zhu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 12 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://zhuhao.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Implementing Gaussian Process in Python and R</title>
      <link>https://zhuhao.org/post/gp_python_r/</link>
      <pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zhuhao.org/post/gp_python_r/</guid>
      <description>Background Gaussian Process (GP) can be represented in the form of
\(f(\mathbf{x}) \sim \mathcal{GP}(m(\mathbf{x}), k(\mathbf{x}, \mathbf{x&amp;#39;}))\)
where \(m(\mathbf{x})\) is the mean function and \(k(\mathbf{x}, \mathbf{x&amp;#39;})\) is the covariance/kernel function. In this homework, we are trying to create some kernel functions from scratch and sample function values from the GP Prior and the GP Posterior.
 Define mean &amp;amp; kernel functions For simplicity, our mean function is set to be 0 for all x inputs.</description>
    </item>
    
    <item>
      <title>Connecting R and arduino wirelessly through websockets</title>
      <link>https://zhuhao.org/post/connecting-r-and-arduino-through-websockets/</link>
      <pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zhuhao.org/post/connecting-r-and-arduino-through-websockets/</guid>
      <description>In the last post, I demonstrated how to send data from arduino to R through serial connection. This time, I&amp;rsquo;m going to talk about how to connect R and arduino through wireless websocket connection. Trust me, it&amp;rsquo;s not as hard as it sounds like.
Hardware requirements Obviously, you need an arduino board that can connect to the Internet. Today, the most popular boards of this kind includes ESP8266 or ESP32.</description>
    </item>
    
    <item>
      <title>Tips on designing hex stickers for #rstats packages</title>
      <link>https://zhuhao.org/post/tips-on-designing-a-hex-sticker-for-rstats-packages/</link>
      <pubDate>Thu, 31 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zhuhao.org/post/tips-on-designing-a-hex-sticker-for-rstats-packages/</guid>
      <description>Earlier today on twitter, Eric asked me this question
Looks terrific! What is your workflow for designing these? I may try one for the podcast soon
&amp;mdash; The R-Podcast (Eric) (@theRcast) January 31, 2019  Immediately after I replied I was using SketchApp, I realized he might be asking me about the actual &amp;ldquo;design workflow&amp;rdquo;. On this aspect, although I feel like I&amp;rsquo;m not the best person to say this but I did gain some experience through making the following 5 stickers.</description>
    </item>
    
    <item>
      <title>Connecting Arduino Chips with R</title>
      <link>https://zhuhao.org/post/connect-arduino-chips-with-r/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zhuhao.org/post/connect-arduino-chips-with-r/</guid>
      <description>For now, the example below requires you to have a Mac or Linux computer. Windows support might come later.
 Sensors are fun. They are small electronic chips that can sense this world. Our smartphones have a bunch of sensors, like gyroscope and accelerometer, but you can also connect these sensors with either an Arduino or a Raspberry Pi. (In this post, I won&amp;rsquo;t talk about Raspberry Pi because although I have one Raspberry Pi at home, the only thing I did with that board so far is to get it out of box&amp;hellip; ðŸ˜³)</description>
    </item>
    
    <item>
      <title>Start and Pause in a Streaming Plot using plotly</title>
      <link>https://zhuhao.org/post/start-and-pause-in-a-streaming-plot-using-plotly/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zhuhao.org/post/start-and-pause-in-a-streaming-plot-using-plotly/</guid>
      <description>plotly has a very nice example about how to making a streaming plot in R. When I was working on the arduino package, I need this feature because I want to create a plotting panel where data will be plotted once collected. So I used that example and quickly created a streaming app.
Here is the core part from the example
p &amp;lt;- plot_ly( y = c(rand(),rand(),rand()), type = &amp;#39;scatter&amp;#39;, mode = &amp;#39;lines&amp;#39;, line = list( color = &amp;#39;#25FEFD&amp;#39;, width = 3 ) ) %&amp;gt;% layout(yaxis = list(range = c(0,10))) output$plot &amp;lt;- renderPlotly(p) observeEvent(input$button, { while(TRUE){ Sys.</description>
    </item>
    
    <item>
      <title>Whatâ€™s New in kableExtra 0.7.0</title>
      <link>https://zhuhao.org/post/what-s-new-in-kableextra-0-7-0/</link>
      <pubDate>Tue, 16 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhuhao.org/post/what-s-new-in-kableextra-0-7-0/</guid>
      <description>kableExtra 0.7.0 is on CRAN now. This update includes quite a few long-waited new features, including immediate display of HTML table in the Viewer panel and a remake for footnote (in replacement for add_footnote), and some important bug fixes.
New Features Live view of HTML table in RStudio HTML tables generated through kableExtra now has its own class and will be previewed in the Viewer panel when itâ€™s printed.</description>
    </item>
    
    <item>
      <title>REDCap API and R Shiny</title>
      <link>https://zhuhao.org/post/2015-04-03-redcap-api-and-r-shiny/</link>
      <pubDate>Fri, 03 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://zhuhao.org/post/2015-04-03-redcap-api-and-r-shiny/</guid>
      <description>REDCap, as says on its website, is a &amp;ldquo;mature and secure web application for building and managing online surveys and databases&amp;rdquo;. It is used in many clinical researches as the database and the database management tool. One of the benefits of combining the usage of REDCap and R is that REDCap has an API (application programming interface), which can be used to easily export and import data into R. In this way, it can reduce the burden of data transformation and reduce possible human mistakes.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://zhuhao.org/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhuhao.org/about/</guid>
      <description>Hi! I&amp;rsquo;m Hao Zhu, a Data Scientist and Software Developer at Marcus Institute for Aging Research. I make tools that are easy to use and hopefully helpful for the scientific community.
As a user, I hate to use tools that either have no vignette at all or have a 500 page manual. I like software that don&amp;rsquo;t give me too many but some choices. I hate to see ugly plots. I like everything that can be turned into dynamic.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://zhuhao.org/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhuhao.org/contact/</guid>
      <description>You can find me on twitter @haozhu233 or contact me through email, which can be found on this page in the maintainer field.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://zhuhao.org/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhuhao.org/projects/</guid>
      <description> R  kableExtra: One of the most popular package to make beautiful tables in R memor: Customizable R Markdown LaTeX Template giphyr: RStudio Addin to download GIF from giphy.com and insert to rmarkdown  </description>
    </item>
    
  </channel>
</rss>