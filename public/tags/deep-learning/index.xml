<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deep Learning on Hao Zhu</title>
    <link>https://zhuhao.org/tags/deep-learning/</link>
    <description>Recent content in Deep Learning on Hao Zhu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 12 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://zhuhao.org/tags/deep-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Implementing Gaussian Process in R and Python</title>
      <link>https://zhuhao.org/post/gp_python_r/</link>
      <pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zhuhao.org/post/gp_python_r/</guid>
      <description>library(reticulate) reticulate::use_condaenv(&amp;quot;dl&amp;quot;) knitr::opts_chunk$set(message = F, warning = F) This blog post is trying to implementing Gaussian Process (GP) in both Python and R. The main purpose is for my personal practice and hopefully it can also be a reference for future me and other people. In fact, itâ€™s actually converted from my first homework in a Bayesian Deep Learning class.
A interesting finding is that the implementation in R is much faster than the one using numpy.</description>
    </item>
    
  </channel>
</rss>